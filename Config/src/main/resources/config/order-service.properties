spring.application.name=order-service

server.port=8083

# H2 database
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

# SQL initialization
spring.sql.init.mode=always
spring.sql.init.platform=h2
spring.sql.init.schema-locations=classpath:schema.sql


# Eureka 
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# load balancer
spring.cloud.loadbalancer.retry.enabled=true
spring.cloud.loadbalancer.retry.max-retries-on-same-service-instance=3
spring.cloud.loadbalancer.retry.max-retries-on-next-service-instance=3
spring.cloud.loadbalancer.retry.backoff.max-backoff=1000

# Resilience4j 
resilience4j.circuitbreaker.instances.userService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.userService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.userService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.userService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userService.eventConsumerBufferSize=10

resilience4j.circuitbreaker.instances.productService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.productService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.productService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.productService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.productService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.productService.eventConsumerBufferSize=10

# sleuth and zipkin
spring.sleuth.sampler.probability=1.0
spring.zipkin.enabled=true
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web